# Generated by Django 4.0.1 on 2022-04-21 08:57

import Solicitudes.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('COMEX', '0001_initial'),
        ('Nomencladores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Solicitud_Bateria',
            fields=[
                ('numsolicitud', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Número')),
                ('fechasol', models.DateField(verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('Aprobada', 'Aprobada'), ('Cancelada', 'Cancelada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10)),
                ('observaciones', models.TextField(blank=True, max_length=150, null=True, verbose_name='Observaciones')),
                ('valor_estimado', models.FloatField(max_length=10, verbose_name='Valor Estimado')),
            ],
            options={
                'verbose_name': 'Solicitud de Batería',
                'verbose_name_plural': 'Solicitudes de Baterías',
                'db_table': 'solicitud_bateria',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_Equipo',
            fields=[
                ('numsolicitud', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Número')),
                ('fechasol', models.DateField(verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('Aprobada', 'Aprobada'), ('Cancelada', 'Cancelada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10)),
                ('observaciones', models.TextField(blank=True, max_length=150, null=True, verbose_name='Observaciones')),
                ('valor_estimado', models.FloatField(max_length=10, verbose_name='Valor Estimado')),
            ],
            options={
                'verbose_name': 'Solicitud de Equipo',
                'verbose_name_plural': 'Solicitudes de Equipos',
                'db_table': 'solicitud_equipo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_Neumatico',
            fields=[
                ('numsolicitud', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Número')),
                ('fechasol', models.DateField(verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('Aprobada', 'Aprobada'), ('Cancelada', 'Cancelada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10)),
                ('observaciones', models.TextField(blank=True, max_length=150, null=True, verbose_name='Observaciones')),
                ('valor_estimado', models.FloatField(max_length=10, verbose_name='Valor Estimado')),
                ('idespecialista', models.ForeignKey(blank=True, db_column='idespecialista', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='COMEX.especialistacomex', verbose_name='Especialista COMEX')),
            ],
            options={
                'verbose_name': 'Solicitud de Neumático',
                'verbose_name_plural': 'Solicitudes de Neumáticos',
                'db_table': 'solicitud_neumatico',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_PPA',
            fields=[
                ('numsolicitud', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Número')),
                ('fechasol', models.DateField(verbose_name='Fecha')),
                ('estado', models.CharField(choices=[('Aprobada', 'Aprobada'), ('Cancelada', 'Cancelada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10)),
                ('observaciones', models.TextField(blank=True, max_length=150, null=True, verbose_name='Observaciones')),
                ('valor_estimado', models.FloatField(max_length=10, verbose_name='Valor Estimado')),
                ('equipo', models.ForeignKey(db_column='idproducto', on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.equipo')),
                ('idespecialista', models.ForeignKey(blank=True, db_column='idespecialista', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='COMEX.especialistacomex', verbose_name='Especialista COMEX')),
                ('numcontratocliente', models.ForeignKey(db_column='numcontratocliente', on_delete=django.db.models.deletion.DO_NOTHING, to='Nomencladores.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Solicitud de Partes, Piezas y Accesorios',
                'verbose_name_plural': 'Solicitudes de Partes, Piezas y Accesorios',
                'db_table': 'solicitud_ppa',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_PPA_Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[Solicitudes.models.validate_cantidad])),
                ('idproducto', models.ForeignKey(db_column='idproducto', on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.ppa', verbose_name='Producto')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_ppa')),
            ],
            options={
                'verbose_name': 'Partes, Piezas y Accesorios',
                'verbose_name_plural': 'Partes, Piezas y Accesorios',
                'db_table': 'solicitud_ppa_proxy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_PPA_Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codmincex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.proveedor', verbose_name='Proveedor')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_ppa')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'solicitud_ppa_poveedor',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='solicitud_ppa',
            name='ppa',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_PPA_Proxy', to='Nomencladores.PPA'),
        ),
        migrations.AddField(
            model_name='solicitud_ppa',
            name='proveedores',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_PPA_Proveedor', to='Nomencladores.Proveedor', verbose_name='Proveedores'),
        ),
        migrations.CreateModel(
            name='Solicitud_Neumatico_Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[Solicitudes.models.validate_cantidad])),
                ('idproducto', models.ForeignKey(db_column='idproducto', on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.neumatico', verbose_name='Neumático')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_neumatico')),
            ],
            options={
                'verbose_name': 'Neumático',
                'verbose_name_plural': 'Neumáticos',
                'db_table': 'solicitud_neumatico_proxy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_Neumatico_Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codmincex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.proveedor', verbose_name='Proveedor')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_neumatico')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'solicitud_neumatico_poveedor',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='solicitud_neumatico',
            name='neumatico',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Neumatico_Proxy', to='Nomencladores.Neumatico'),
        ),
        migrations.AddField(
            model_name='solicitud_neumatico',
            name='numcontratocliente',
            field=models.ForeignKey(db_column='numcontratocliente', on_delete=django.db.models.deletion.DO_NOTHING, to='Nomencladores.cliente', verbose_name='Cliente'),
        ),
        migrations.AddField(
            model_name='solicitud_neumatico',
            name='proveedores',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Neumatico_Proveedor', to='Nomencladores.Proveedor', verbose_name='Proveedores'),
        ),
        migrations.CreateModel(
            name='Solicitud_Equipo_Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[Solicitudes.models.validate_cantidad])),
                ('idproducto', models.ForeignKey(db_column='idproducto', on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.equipo')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_equipo')),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
                'db_table': 'solicitud_equipo_proxy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_Equipo_Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codmincex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.proveedor', verbose_name='Proveedor')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_equipo')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'solicitud_equipo_poveedor',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='solicitud_equipo',
            name='equipo',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Equipo_Proxy', to='Nomencladores.Equipo', verbose_name='Equipos'),
        ),
        migrations.AddField(
            model_name='solicitud_equipo',
            name='idespecialista',
            field=models.ForeignKey(blank=True, db_column='idespecialista', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='COMEX.especialistacomex', verbose_name='Especialista COMEX'),
        ),
        migrations.AddField(
            model_name='solicitud_equipo',
            name='numcontratocliente',
            field=models.ForeignKey(db_column='numcontratocliente', on_delete=django.db.models.deletion.DO_NOTHING, to='Nomencladores.cliente', verbose_name='Cliente'),
        ),
        migrations.AddField(
            model_name='solicitud_equipo',
            name='proveedores',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Equipo_Proveedor', to='Nomencladores.Proveedor', verbose_name='Proveedores'),
        ),
        migrations.CreateModel(
            name='Solicitud_Bateria_Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[Solicitudes.models.validate_cantidad])),
                ('idproducto', models.ForeignKey(db_column='idproducto', on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.bateria', verbose_name='Batería')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_bateria')),
            ],
            options={
                'verbose_name': 'Batería',
                'verbose_name_plural': 'Baterías',
                'db_table': 'solicitud_bateria_proxy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Solicitud_Bateria_Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codmincex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Nomencladores.proveedor', verbose_name='Proveedor')),
                ('numsolicitud', models.ForeignKey(db_column='numsolicitud', on_delete=django.db.models.deletion.CASCADE, to='Solicitudes.solicitud_bateria')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'solicitud_bateria_poveedor',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='solicitud_bateria',
            name='bateria',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Bateria_Proxy', to='Nomencladores.Bateria'),
        ),
        migrations.AddField(
            model_name='solicitud_bateria',
            name='idespecialista',
            field=models.ForeignKey(blank=True, db_column='idespecialista', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='COMEX.especialistacomex', verbose_name='Especialista COMEX'),
        ),
        migrations.AddField(
            model_name='solicitud_bateria',
            name='numcontratocliente',
            field=models.ForeignKey(db_column='numcontratocliente', on_delete=django.db.models.deletion.DO_NOTHING, to='Nomencladores.cliente', verbose_name='Cliente'),
        ),
        migrations.AddField(
            model_name='solicitud_bateria',
            name='proveedores',
            field=models.ManyToManyField(through='Solicitudes.Solicitud_Bateria_Proveedor', to='Nomencladores.Proveedor', verbose_name='Proveedores'),
        ),
    ]
